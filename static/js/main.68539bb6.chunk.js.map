{"version":3,"sources":["images/background.jpg","Base/theme.js","Base/base.js","Components/Header/Header.styled.js","Components/Header/Header.js","Components/Footer/FooterContainer.js","Components/Footer/Footer.js","Components/LocationInput/LocationInputStyled.js","Components/LocationInput/LocationInput.js","Components/WeatherSection/WeatherSectionStyled.js","Base/Icons.js","Components/WeatherSection/WeatherSection.js","App.js","index.js"],"names":["Theme","colors","primaryColor","darkGreen","green","lightGreen","beige","typography","baseFont","regular","bold","GlobalStyle","createGlobalStyle","backgroundImage","HeaderContainer","styled","header","Heading","h1","Socials","div","SocialLinks","a","SocialIcon","i","Header","href","target","className","FooterContainer","Footer","SectionForm","section","LocationForm","form","InputLocation","input","SubmitLocation","button","InputIcon","LocationInput","location","setLocation","getCurrent","getForecast","coords","forecast","type","placeholder","onChange","e","value","onClick","preventDefault","alert","ForecastWrapper","MainTemp","h2","MainInfo","ForecastDetailsContainer","ForecastDetails","MainSpan","span","MainParagraph","p","MainIcon","Icons","icon","iconsList","key","hasOwnProperty","customIcon","Weather","current","mainTemp","main","temp","toFixed","weather","dailyForecast","daily","map","day","console","log","style","color","width","height","fontSize","backgroundColor","name","lat","App","useState","setCurrent","setForecast","lon","setCoords","fetch","response","json","result","useEffect","coord","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68539bb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.86c9371c.jpg\";","const Theme = {\r\n    colors: {\r\n        primaryColor: \"#111426\",\r\n        darkGreen: \"#223740\",\r\n        green: \"#7E8C7B\",\r\n        lightGreen: \"#BDBFA8\",\r\n        beige: \"#F2ECEB\",\r\n    },\r\n    typography: {\r\n        baseFont: \"'Poppins', sans-serif;\",\r\n        regular: \"400\",\r\n        bold: \"700\",\r\n    },\r\n};\r\n\r\nexport default Theme;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport backgroundImage from \"../images/background.jpg\";\r\nimport Theme from \"./theme\";\r\n\r\nconst {\r\n    // colors: { primaryColor },\r\n    // regular, bold\r\n    typography: { baseFont },\r\n} = Theme;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-size: 15px;\r\n    }\r\n\r\n    body {\r\n        /* min-height: 100vh; */\r\n        background-image: url(${backgroundImage});\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        background-attachment: fixed;\r\n        font-family: ${baseFont};\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\nimport Theme from \"../../Base/theme\";\r\n\r\nconst {\r\n    colors: { lightGreen },\r\n    typography: { regular },\r\n} = Theme;\r\n\r\nexport const HeaderContainer = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n    margin-left: 15px;\r\n    font-size: 1.9rem;\r\n    font-weight: ${regular};\r\n    color: ${lightGreen};\r\n`;\r\n\r\nexport const Socials = styled.div`\r\n    display: flex;\r\n    margin-right: 10px;\r\n`;\r\n\r\nexport const SocialLinks = styled.a`\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const SocialIcon = styled.i`\r\n    margin: 5px;\r\n    display: block;\r\n    font-size: 2rem;\r\n    color: ${lightGreen};\r\n`;\r\n","import {\r\n    HeaderContainer,\r\n    Heading,\r\n    Socials,\r\n    SocialLinks,\r\n    SocialIcon,\r\n} from \"./Header.styled\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderContainer>\r\n            <Heading>Weather App</Heading>\r\n            <Socials>\r\n                <SocialLinks href=\"https://github.com/mate966\" target=\"blank\">\r\n                    <SocialIcon className=\"fab fa-github-square\" />\r\n                </SocialLinks>\r\n                <SocialLinks\r\n                    href=\"https://linkedin.com/in/mateuszszweda\"\r\n                    target=\"blank\"\r\n                >\r\n                    <SocialIcon className=\"fab fa-linkedin\" />\r\n                </SocialLinks>\r\n            </Socials>\r\n        </HeaderContainer>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.div`\r\n    text-align: right;\r\n    font-size: 0.7rem;\r\n    color: white;\r\n`;\r\n","import React from \"react\";\r\nimport { FooterContainer } from \"./FooterContainer\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div>\r\n                <FooterContainer>\r\n                    <p>Created in React</p>\r\n                </FooterContainer>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport Theme from \"../../Base/theme\";\r\n\r\nconst {\r\n    colors: { lightGreen },\r\n} = Theme;\r\n\r\nexport const SectionForm = styled.section`\r\n    position: relative;\r\n    /* margin: 10px; */\r\n    min-height: 20vh;\r\n`;\r\n\r\nexport const LocationForm = styled.form`\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    display: flex;\r\n    width: 80%;\r\n    padding: 0 20px;\r\n    border: 1px solid ${lightGreen};\r\n    background-color: white;\r\n    border-radius: 7px;\r\n    transform: translate(-50%, 0);\r\n`;\r\n\r\nexport const InputLocation = styled.input`\r\n    flex-grow: 1;\r\n    height: 40px;\r\n    border: none;\r\n    color: grey;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport const SubmitLocation = styled.button`\r\n    margin-left: 10px;\r\n    border: none;\r\n    font-size: 20px;\r\n    background-color: transparent;\r\n    color: ${lightGreen};\r\n`;\r\n\r\nexport const InputIcon = styled.i``;\r\n","import React from \"react\";\r\n\r\nimport {\r\n    LocationForm,\r\n    InputLocation,\r\n    SubmitLocation,\r\n    SectionForm,\r\n    InputIcon,\r\n} from \"./LocationInputStyled\";\r\n\r\nconst LocationInput = ({\r\n    location,\r\n    setLocation,\r\n    getCurrent,\r\n    getForecast,\r\n    coords,\r\n    forecast,\r\n}) => {\r\n    const handleLocation = (e) => {\r\n        setLocation(e.target.value);\r\n    };\r\n\r\n    const submitLocation = (e) => {\r\n        e.preventDefault();\r\n        if (!setLocation) {\r\n            alert(\"Put some location!\");\r\n        } else {\r\n            setLocation(\"\");\r\n            getCurrent();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SectionForm>\r\n            <LocationForm>\r\n                <InputLocation\r\n                    type=\"text\"\r\n                    placeholder=\"Wpisz miejscowość\"\r\n                    onChange={handleLocation}\r\n                    value={location}\r\n                />\r\n                <SubmitLocation type=\"submit\" onClick={submitLocation}>\r\n                    <InputIcon className=\"fas fa-location-arrow\"></InputIcon>\r\n                </SubmitLocation>\r\n            </LocationForm>\r\n        </SectionForm>\r\n    );\r\n};\r\n\r\nexport default LocationInput;\r\n","import styled from \"styled-components\";\r\n\r\nimport Theme from \"../../Base/theme\";\r\n\r\nconst {\r\n    colors: { darkGreen },\r\n    typography: { regular },\r\n} = Theme;\r\n\r\nexport const ForecastWrapper = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const MainTemp = styled.h2`\r\n    text-align: center;\r\n    font-size: 4.5rem;\r\n    font-weight: ${regular};\r\n    color: ${darkGreen};\r\n`;\r\n\r\nexport const MainInfo = styled.div`\r\n    min-width: 100%;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    background-color: rgba(126, 140, 123, 0.7);\r\n    color: white;\r\n`;\r\n\r\nexport const ForecastDetailsContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    min-width: 100%;\r\n    margin: 15px 0;\r\n    border-radius: 5px;\r\n    background-color: rgba(126, 140, 123, 0.7);\r\n    color: white;\r\n`;\r\nexport const ForecastDetails = styled.div`\r\n    width: 50%;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const MainSpan = styled.span`\r\n    display: block;\r\n    font-size: 2rem;\r\n    font-weight: ${regular};\r\n    /* color: white; */\r\n`;\r\n\r\nexport const MainParagraph = styled.p`\r\n    /* color: white; */\r\n`;\r\n\r\nexport const MainIcon = styled.i`\r\n    width: 50px;\r\n    height: 50px;\r\n    vertical-align: middle;\r\n    font-size: 3rem;\r\n    color: red;\r\n    background-color: red;\r\n`;\r\n","import { MainIcon } from \"../Components/WeatherSection/WeatherSectionStyled\";\r\n\r\nconst Icons = ({ icon }) => {\r\n    const iconsList = {\r\n        \"01d\": \"wi-day-sunny\",\r\n        \"02d\": \"wi-day-cloudy\",\r\n        \"03d\": \"wi-cloud\",\r\n        \"04d\": \"wi-cloud\",\r\n        \"09d\": \"wi-day-rain\",\r\n        \"10d\": \"wi-day-rain-wind\",\r\n        \"11d\": \"wi-day-thunderstorm\",\r\n        \"13d\": \"wi-day-snow\",\r\n        \"50d\": \"wi-day-fog\",\r\n        \"01n\": \"wi-moon-new\",\r\n        \"02n\": \"wi-night-partly-cloudy\",\r\n        \"03n\": \"wi-night-cloudy\",\r\n        \"04n\": \"wi-cloudy\",\r\n        \"09n\": \"wi-night-rain\",\r\n        \"10n\": \"wi-night-showers\",\r\n        \"11n\": \"wi-night-storm-showers\",\r\n        \"13n\": \"wi-night-snow\",\r\n        \"50n\": \"wi-night-fog\",\r\n    };\r\n\r\n    const customIcon = () => {\r\n        for (const key in iconsList) {\r\n            if (iconsList.hasOwnProperty(key)) {\r\n                if (icon === key) {\r\n                    return \"wi \" + iconsList[key];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return <MainIcon className={customIcon()}></MainIcon>;\r\n};\r\n\r\nexport default Icons;\r\n","import {\r\n    MainInfo,\r\n    ForecastWrapper,\r\n    MainSpan,\r\n    MainIcon,\r\n    MainParagraph,\r\n    MainTemp,\r\n    ForecastDetails,\r\n    TestIcon,\r\n    ForecastDetailsContainer,\r\n} from \"./WeatherSectionStyled\";\r\n\r\nimport Icons from \"../../Base/Icons\";\r\n\r\nconst Weather = ({ current, coords, forecast, getForecast }) => {\r\n    const mainTemp = current.main.temp.toFixed();\r\n    const icon = current.weather[0].icon;\r\n    const dailyForecast = forecast.daily.map((day) => day);\r\n    console.log(dailyForecast);\r\n    console.log(current);\r\n    console.log(icon);\r\n\r\n    return (\r\n        <ForecastWrapper>\r\n            <Icons icon={icon} />\r\n            <i\r\n                className=\"wi-day-sunny\"\r\n                style={{\r\n                    color: \"red\",\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                    fontSize: \"2rem\",\r\n                    backgroundColor: \"green\",\r\n                }}\r\n            />\r\n            <MainTemp>{mainTemp}°C</MainTemp>\r\n            <h1>{current.name}</h1>\r\n            <h2>{coords.lat}</h2>\r\n            <MainInfo>\r\n                <MainIcon></MainIcon>\r\n                <p>\r\n                    <MainSpan></MainSpan>\r\n                </p>\r\n                <MainParagraph>Piątek 8 Października</MainParagraph>\r\n            </MainInfo>\r\n            <ForecastDetailsContainer>\r\n                <ForecastDetails>Godzina Zachodu</ForecastDetails>\r\n                <ForecastDetails>Godzina Zachodu</ForecastDetails>\r\n                <ForecastDetails>Wiglotność</ForecastDetails>\r\n                <ForecastDetails>Ciśnienie</ForecastDetails>\r\n            </ForecastDetailsContainer>\r\n        </ForecastWrapper>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n","import { GlobalStyle } from \"./Base\";\r\n\r\nimport Header from \"../src/Components/Header/Header\";\r\nimport Footer from \"../src/Components/Footer/Footer\";\r\nimport LocationInput from \"../src/Components/LocationInput/LocationInput\";\r\nimport Weather from \"../src/Components/WeatherSection/WeatherSection\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n    const [current, setCurrent] = useState([]);\r\n    const [forecast, setForecast] = useState([]);\r\n    const [location, setLocation] = useState(\"\");\r\n    const [coords, setCoords] = useState({\r\n        lat: \"\",\r\n        lon: \"\",\r\n    });\r\n\r\n    const getCurrent = () => {\r\n        (async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=29488b0a4ac01b307dac2f403a8774a9&units=metric&lang=pl`\r\n                );\r\n                const result = await response.json();\r\n                setCurrent(result);\r\n                setCoords({\r\n                    lat: result.coord.lat,\r\n                    lon: result.coord.lon,\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })();\r\n    };\r\n\r\n    const getForecast = (lat, lon) => {\r\n        (async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,current,minutely,alerts&appid=29488b0a4ac01b307dac2f403a8774a9&units=metric&lang=pl`\r\n                );\r\n                const result = await response.json();\r\n                setForecast(result);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (coords.lat) {\r\n            getForecast(coords.lat, coords.lon);\r\n        }\r\n    }, [coords.lat, coords.lon]);\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyle />\r\n            <div className=\"App\">\r\n                <Header />\r\n                <LocationInput\r\n                    forecast={forecast}\r\n                    coords={coords}\r\n                    location={location}\r\n                    setLocation={setLocation}\r\n                    getCurrent={getCurrent}\r\n                    getForecast={getForecast}\r\n                />\r\n                {forecast.length !== 0 && (\r\n                    <Weather\r\n                        coords={coords}\r\n                        current={current}\r\n                        forecast={forecast}\r\n                        getForecast={getForecast}\r\n                    />\r\n                )}\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}